// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import net "net"
import packet "github.com/nickw444/miio-go/protocol/packet"
import transport "github.com/nickw444/miio-go/protocol/transport"

// Transport is an autogenerated mock type for the Transport type
type Transport struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Transport) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Inbound provides a mock function with given fields:
func (_m *Transport) Inbound() transport.Inbound {
	ret := _m.Called()

	var r0 transport.Inbound
	if rf, ok := ret.Get(0).(func() transport.Inbound); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(transport.Inbound)
		}
	}

	return r0
}

// NewOutbound provides a mock function with given fields: crypto, dest
func (_m *Transport) NewOutbound(crypto packet.Crypto, dest net.Addr) transport.Outbound {
	ret := _m.Called(crypto, dest)

	var r0 transport.Outbound
	if rf, ok := ret.Get(0).(func(packet.Crypto, net.Addr) transport.Outbound); ok {
		r0 = rf(crypto, dest)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(transport.Outbound)
		}
	}

	return r0
}
